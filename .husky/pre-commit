#!/bin/bash

echo "üîç Checking staged files..."

# Get staged files
FILES=$(git diff --name-only --cached --relative | grep -E '\.(js|jsx|ts|tsx|css|json|md)$')

if [ -z "$FILES" ]; then
  echo "No files to format or lint. Proceeding with commit..."
  exit 0
fi

echo "Found files to format and lint:"
echo "$FILES"
echo "Running Prettier..."

# Run Prettier on staged files but don't automatically re-stage them
echo "$FILES" | while read -r file; do
  if [ -f "$file" ]; then
    npx prettier --write "$file"
  fi
done

# Check if Prettier modified any files
PRETTIER_MODIFIED=$(git diff --name-only)

if [ -z "$PRETTIER_MODIFIED" ]; then
  echo "‚ú® No formatting changes needed."
else
  echo "‚ö†Ô∏è Prettier modified the following files:"
  echo "$PRETTIER_MODIFIED"
fi

echo "Running ESLint..."

# Run ESLint on the staged files but don't automatically re-stage them
echo "$FILES" | while read -r file; do
  if [ -f "$file" ]; then
    npx eslint "$file" --fix
  fi
done

# Check if ESLint modified any files
ESLINT_MODIFIED=$(git diff --name-only)

if [ -z "$ESLINT_MODIFIED" ]; then
  echo "‚ú® No linting fixes needed."
else
  echo "‚ö†Ô∏è ESLint fixed issues in the following files:"
  echo "$ESLINT_MODIFIED"
fi

# If either Prettier or ESLint made changes, exit with a message to review and stage manually
if [ -n "$PRETTIER_MODIFIED" ] || [ -n "$ESLINT_MODIFIED" ]; then
  echo "‚ö†Ô∏è Some files were modified by Prettier or ESLint. Please review the changes and stage the files manually before committing."
  exit 1
else
  echo "‚úÖ No changes detected after formatting and linting. Proceeding with commit..."
  exit 0
fi